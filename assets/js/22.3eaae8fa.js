(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{686:function(s,t,a){"use strict";a.r(t);var r=a(10),n=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[s._v("随力扣刷题，所见函数，记录于此")])]),s._v(" "),a("h1",{attrs:{id:"c语言随记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言随记"}},[s._v("#")]),s._v(" C语言随记")]),s._v(" "),a("h2",{attrs:{id:"函数篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数篇"}},[s._v("#")]),s._v(" 函数篇")]),s._v(" "),a("h3",{attrs:{id:"memcpy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memcpy"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-memcpy.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("memcpy"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<string.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("void *memcpy(void *str1, const void *str2, size_t n)")]),s._v(" 从存储区 "),a("strong",[s._v("str2")]),s._v(" 复制 "),a("strong",[s._v("n")]),s._v(" 个字节到存储区 "),a("strong",[s._v("str1")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("memcpy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str1")]),s._v(" -- 指向用于存储复制内容的目标数组，类型强制转换为 void* 指针。")]),s._v(" "),a("li",[a("strong",[s._v("str2")]),s._v(" -- 指向要复制的数据源，类型强制转换为 void* 指针。")]),s._v(" "),a("li",[a("strong",[s._v("n")]),s._v(" -- 要被复制的字节数。")])]),s._v(" "),a("h3",{attrs:{id:"sprintf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprintf"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/minmin123/p/11926384.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("sprintf"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<stdio.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("int sprintf(char *str, const char *format, ...)")]),s._v(" 发送格式化输出到 "),a("strong",[s._v("str")]),s._v(" 所指向的字符串。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sprintf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str")]),s._v(" -- 这是指向一个字符数组的指针，该数组存储了 C 字符串。")]),s._v(" "),a("li",[a("strong",[s._v("format")]),s._v(" -- 这是字符串，包含了要被写入到字符串 str 的文本。它可以包含嵌入的 format 标签，format 标签可被随后的附加参数中指定的值替换，并按需求进行格式化。")])]),s._v(" "),a("h3",{attrs:{id:"snprintf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snprintf"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-snprintf.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("snprintf"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<stdio.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("int snprintf(char *str, size_t size, const char *format, ...)")]),s._v(" 设将可变参数**(...)**按照 "),a("strong",[s._v("format")]),s._v(" 格式化成字符串，并将字符串复制到 "),a("strong",[s._v("str")]),s._v(" 中，"),a("strong",[s._v("size")]),s._v(" 为要写入的字符的最大数目，超过 "),a("strong",[s._v("size")]),s._v(" 会被截断。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("snprintf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str")]),s._v(" -- 目标字符串。")]),s._v(" "),a("li",[a("strong",[s._v("size")]),s._v(" -- 拷贝字节数(Bytes)。")]),s._v(" "),a("li",[a("strong",[s._v("format")]),s._v(" -- 格式化成字符串。")]),s._v(" "),a("li",[a("strong",[s._v("...")]),s._v(" -- 可变参数。")])]),s._v(" "),a("p",[s._v("返回值:")]),s._v(" "),a("ul",[a("li",[s._v("1、如果格式化后的字符串长度小于 "),a("strong",[s._v("size")]),s._v("，则会把字符串全部复制到 "),a("strong",[s._v("str")]),s._v(" 中，并给其后添加一个字符串结束符 "),a("strong",[s._v("\\0")]),s._v("；")]),s._v(" "),a("li",[s._v("2、如果格式化后的字符串长度大于等于 "),a("strong",[s._v("size")]),s._v("，超过 "),a("strong",[s._v("size")]),s._v(" 的部分会被截断，只将其中的 "),a("strong",[s._v("(size-1)")]),s._v(" 个字符复制到 "),a("strong",[s._v("str")]),s._v(" 中，并给其后添加一个字符串结束符 "),a("strong",[s._v("\\0")]),s._v("，返回值为欲写入的字符串长度。")])]),s._v(" "),a("h3",{attrs:{id:"qsort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qsort"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/laizhenghong2012/p/8442270.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("qsort"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<stdlib.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("void qsort(void *base, size_t nitems, size_t size, int (*compar)(const void *, const void*))")]),s._v(" 对数组进行排序。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("qsort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" nmemb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("compar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("base")]),s._v(" -- 指向要排序的数组的第一个元素的指针。")]),s._v(" "),a("li",[a("strong",[s._v("nitems")]),s._v(" -- 由 base 指向的数组中元素的个数。")]),s._v(" "),a("li",[a("strong",[s._v("size")]),s._v(" -- 数组中每个元素的大小，以字节为单位。")]),s._v(" "),a("li",[a("strong",[s._v("compar")]),s._v(" -- 用来比较两个元素的函数。")])]),s._v(" "),a("h3",{attrs:{id:"memset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memset"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-memset.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("memset"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<string.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("void *memset(void *str, int c, size_t n)")]),s._v(" 复制字符 "),a("strong",[s._v("c")]),s._v("（一个无符号字符）到参数 "),a("strong",[s._v("str")]),s._v(" 所指向的字符串的前 "),a("strong",[s._v("n")]),s._v(" 个字符。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("memset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str")]),s._v(" -- 指向要填充的内存块。")]),s._v(" "),a("li",[a("strong",[s._v("c")]),s._v(" -- 要被设置的值。该值以 int 形式传递，但是函数在填充内存块时是使用该值的无符号字符形式。")]),s._v(" "),a("li",[a("strong",[s._v("n")]),s._v(" -- 要被设置为该值的字符数。")])]),s._v(" "),a("h3",{attrs:{id:"strpbrk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strpbrk"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-strpbrk.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("strpbrk"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<string.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("char *strpbrk(const char *str1, const char *str2)")]),s._v(" 检索字符串 "),a("strong",[s._v("str1")]),s._v(" 中第一个匹配字符串 "),a("strong",[s._v("str2")]),s._v(" 中字符的字符，不包含空结束字符。也就是说，依次检验字符串 str1 中的字符，当被检验字符在字符串 str2 中也包含时，则停止检验，并返回该字符位置。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strpbrk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str1")]),s._v(" -- 要被检索的 C 字符串。")]),s._v(" "),a("li",[a("strong",[s._v("str2")]),s._v(" -- 该字符串包含了要在 str1 中进行匹配的字符列表。")])]),s._v(" "),a("h3",{attrs:{id:"strchr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strchr"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-strchr.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("strchr"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<string.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("char *strchr(const char *str, int c)")]),s._v(" 在参数 "),a("strong",[s._v("str")]),s._v(" 所指向的字符串中搜索第一次出现字符 "),a("strong",[s._v("c")]),s._v("（一个无符号字符）的位置。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strchr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str")]),s._v(" -- 要被检索的 C 字符串。")]),s._v(" "),a("li",[a("strong",[s._v("c")]),s._v(" -- 在 str 中要搜索的字符。")])]),s._v(" "),a("h3",{attrs:{id:"strtok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtok"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-strtok.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("strtok"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<string.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("char *strtok(char *str, const char *delim)")]),s._v(" 分解字符串 "),a("strong",[s._v("str")]),s._v(" 为一组字符串，"),a("strong",[s._v("delim")]),s._v(" 为分隔符。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strtok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("delim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("str")]),s._v(" -- 要被分解成一组小字符串的字符串。")]),s._v(" "),a("li",[a("strong",[s._v("delim")]),s._v(" -- 包含分隔符的 C 字符串。")])]),s._v(" "),a("p",[s._v("初遇：力扣\t"),a("a",{attrs:{href:"https://leetcode-cn.com/problems/simplify-path/solution/leetcode71jian-hua-lu-jing-by-ying-185-ncch/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[s._v("71.简化路径")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("注意：在对一个长字符串分割的时候，第一次调用时，strtok函数的第一个参数传入要分割的字符串，而"),a("strong",[s._v("第二次以及后面再次调用该函数的时候，strtok函数的第一个参数应该传入NULL;")]),s._v("\n这是因为在strtok第一个参数为NULL的时候，"),a("strong",[s._v("该函数默认使用上一次未分割完的字符串的未分割的起始位置作为本次分割的起始位置，直到分割结束为止。")])]),s._v(" "),a("h3",{attrs:{id:"calloc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#calloc"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-calloc.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("calloc"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("em",[s._v("<stdlib.h>")])]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("void *calloc(size_t nitems, size_t size)")]),s._v(" 分配所需的内存空间，并返回一个指向它的指针。"),a("strong",[s._v("malloc")]),s._v(" 和 "),a("strong",[s._v("calloc")]),s._v(" 之间的不同点是，malloc 不会设置内存为零，而 calloc 会设置分配的内存为零。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("calloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" nitems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("nitems")]),s._v(" -- 要被分配的元素个数。")]),s._v(" "),a("li",[a("strong",[s._v("size")]),s._v(" -- 元素的大小。")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/stevenwuzheng/p/5484986.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("和 malloc()的区别"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"strcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strcat"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-strcat.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("strcat"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strcat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("dest")]),s._v(" -- 指向目标数组，该数组包含了一个 C 字符串，且足够容纳追加后的字符串。")]),s._v(" "),a("li",[a("strong",[s._v("src")]),s._v(" -- 指向要追加的字符串，该字符串不会覆盖目标字符串。")])]),s._v(" "),a("h3",{attrs:{id:"isalpha"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isalpha"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-isalpha.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("isalpha"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isalpha")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("c")]),s._v(" -- 这是要检查的字符。")])]),s._v(" "),a("p",[s._v("如果 c 是一个字母，则该函数返回非零值，否则返回 0。")]),s._v(" "),a("h3",{attrs:{id:"tolower"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tolower"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/cprogramming/c-function-tolower.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("tolower"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("C 库函数 "),a("strong",[s._v("int tolower(int c)")]),s._v(" 把给定的字母转换为小写字母。"),a("strong",[s._v("<ctype.h>")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tolower")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("c")]),s._v(" -- 这是要被转换为小写的字母。")])]),s._v(" "),a("p",[s._v("如果 c 有相对应的小写字母，则该函数返回 c 的小写字母，否则 c 保持不变。返回值是一个可被隐式转换为 char 类型的 int 值。")]),s._v(" "),a("h3",{attrs:{id:"strdup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strdup"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://blog.csdn.net/weixin_30933531/article/details/98270882",target:"_blank",rel:"noopener noreferrer"}},[s._v("strdup"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("拷贝字符串s的一个副本，由函数返回值返回，这个副本有自己的内存空间，和s不相干。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__strdup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"strndup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strndup"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/yinguojin/p/10195700.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("strndup"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("与strdup类似，最多只复制n个字节。如果s大于n，则只复制n个字节，并添加一个终止的空字节（'\\0'）。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strndup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"assert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assert"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/cpoint/p/3367326.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("assert"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("assert宏的原型定义在<assert.h>中，其作用是如果它的条件返回错误，则终止程序执行")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<assert.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("assert()的缺点是，频繁的调用会极大的影响程序的性能，增加额外的开销")])]),s._v(" "),a("h3",{attrs:{id:"srand-unsigned-time-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#srand-unsigned-time-null"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://www.runoob.com/note/40691",target:"_blank",rel:"noopener noreferrer"}},[s._v("srand((unsigned)time(NULL))"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("srand函数是随机数发生器的初始化函数。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("srand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" seed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"tolower-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tolower-2"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"http://c.biancheng.net/ref/tolower.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("tolower()"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("tolower() 函数用来将大写字母转换为小写字母。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tolower")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"算法篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法篇"}},[s._v("#")]),s._v(" 算法篇")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Knuth-Morris-Pratt 算法")]),s._v(" "),a("p",[s._v("力扣第28题——实现strStr()")])]),s._v(" "),a("li",[a("p",[s._v("窗口滑动算法")])]),s._v(" "),a("li",[a("p",[s._v("双指针")])]),s._v(" "),a("li",[a("p",[s._v("回溯")])]),s._v(" "),a("li",[a("p",[s._v("位运算")])])]),s._v(" "),a("h3",{attrs:{id:"位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[s._v("#")]),s._v(" 位运算")]),s._v(" "),a("h4",{attrs:{id:"按位与运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按位与运算"}},[s._v("#")]),s._v(" 按位与运算：&")]),s._v(" "),a("p",[s._v("同为"),a("code",[s._v("1")]),s._v("，才为"),a("code",[s._v("1")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1001  （9 在内存中的存储）\n& 0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 0101  （5 在内存中的存储）\n    0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 0001  （1 在内存中的存储）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("**按位与运算通常用来对某些位清 0，或者保留某些位。**例如要把 n 的高 16 位清 0 ，保留低 16 位，可以进行"),a("code",[s._v("n & 0XFFFF")]),s._v("运算（0XFFFF 在内存中的存储形式为 0000 0000 -- 0000 0000 -- 1111 1111 -- 1111 1111）。")]),s._v(" "),a("p",[s._v("用法：")]),s._v(" "),a("ol",[a("li",[s._v("n & (n - 1)，每次运算可以将n最低位的1进行翻转")])]),s._v(" "),a("h4",{attrs:{id:"按位或运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按位或运算"}},[s._v("#")]),s._v(" 按位或运算：|")]),s._v(" "),a("p",[s._v("同为"),a("code",[s._v("0")]),s._v("，才为"),a("code",[s._v("0")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1001  （9 在内存中的存储）\n|   0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 0101  （5 在内存中的存储）\n-----------------------------------------------------------------------------------\n    0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1101  （13 在内存中的存储）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("**按位或运算可以用来将某些位置 1，或者保留某些位。**例如要把 n 的高 16 位置 1，保留低 16 位，可以进行"),a("code",[s._v("n | 0XFFFF0000")]),s._v("运算（0XFFFF0000 在内存中的存储形式为 1111 1111 -- 1111 1111 -- 0000 0000 -- 0000 0000）。")]),s._v(" "),a("h4",{attrs:{id:"按位异或运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按位异或运算"}},[s._v("#")]),s._v(" 按位异或运算：^")]),s._v(" "),a("p",[s._v("参与"),a("code",[s._v("^")]),s._v("运算两个二进制位"),a("code",[s._v("不同")]),s._v("时，结果为 "),a("code",[s._v("1")]),s._v("，相同时结果为"),a("code",[s._v("0")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1001  （9 在内存中的存储）\n^  0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 0101  （5 在内存中的存储）\n-----------------------------------------------------------------------------------\n    0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1100  （12 在内存中的存储）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("**按位异或运算可以用来将某些二进制位反转。**例如要把 n 的高 16 位反转，保留低 16 位，可以进行n ^ 0XFFFF0000运算（0XFFFF0000 在内存中的存储形式为 1111 1111 -- 1111 1111 -- 0000 0000 -- 0000 0000）。")]),s._v(" "),a("h4",{attrs:{id:"取反运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取反运算"}},[s._v("#")]),s._v(" 取反运算：~")]),s._v(" "),a("p",[s._v("取反运算符"),a("code",[s._v("~")]),s._v("为单目运算符，右结合性，作用是对参与运算的二进制位取反。例如"),a("code",[s._v("~1")]),s._v("为0，"),a("code",[s._v("~0")]),s._v("为1，这和逻辑运算中的"),a("code",[s._v("!")]),s._v("非常类似。。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("~ 0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1001  （9 在内存中的存储）\n-----------------------------------------------------------------------------------\n   1111 1111 -- 1111 1111 -- 1111 1111 -- 1111 0110  （-10 在内存中的存储）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"左移运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#左移运算"}},[s._v("#")]),s._v(" 左移运算：<<")]),s._v(" "),a("p",[s._v("左移运算符"),a("code",[s._v("<<")]),s._v("用来把操作数的各个二进制位全部左移若干位，"),a("strong",[s._v("高位丢弃，低位补0。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<< 0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1001  （9 在内存中的存储）\n-----------------------------------------------------------------------------------\n     0000 0000 -- 0000 0000 -- 0000 0000 -- 0100 1000  （72 在内存中的存储）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("如果数据较小，被丢弃的高位不包含 1，那么左移 n 位相当于乘以 2 的 n 次方。")])]),s._v(" "),a("h4",{attrs:{id:"右移运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#右移运算"}},[s._v("#")]),s._v(" 右移运算：>>")]),s._v(" "),a("p",[s._v("右移运算符"),a("code",[s._v(">>")]),s._v("用来把操作数的各个二进制位全部右移若干位，低位丢弃，高位补 0 或 1。如果数据的最高位是 0，那么就补 0；如果最高位是 1，那么就补 1。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(">> 0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 1001  （9 在内存中的存储）\n-----------------------------------------------------------------------------------\n     0000 0000 -- 0000 0000 -- 0000 0000 -- 0000 0001  （1 在内存中的存储）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("如果被丢弃的低位不包含 1，那么右移 n 位相当于除以 2 的 n 次方（但被移除的位中经常会包含 1）。")])]),s._v(" "),a("h3",{attrs:{id:"kmp算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kmp算法"}},[s._v("#")]),s._v(" KMP算法")])])}),[],!1,null,null,null);t.default=n.exports}}]);